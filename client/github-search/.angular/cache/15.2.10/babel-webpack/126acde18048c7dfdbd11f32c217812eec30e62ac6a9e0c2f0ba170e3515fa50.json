{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nexport class AuthInterceptor {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  intercept(req, next) {\n    console.log(`AddTokenInterceptor - ${req.url}`);\n    let token = localStorage.getItem(\"access_token\") || this.userService.getToken();\n    let jsonReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return next.handle(jsonReq);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAIxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAC/B;EAEAC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9CC,OAAO,CAACC,GAAG,CAAC,yBAAyBH,GAAG,CAACI,GAAG,EAAE,CAAC;IAC/C,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE;IAC3E,IAAIC,OAAO,GAAqBT,GAAG,CAACU,KAAK,CAAC;MACtCC,UAAU,EAAE;QACRC,aAAa,EAAE,UAAUP,KAAK;;KAErC,CAAC;IAEN,OAAOJ,IAAI,CAACY,MAAM,CAACJ,OAAO,CAAC;EAC/B;EAAC;qBAjBQb,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAkB,SAAflB,eAAe;EAAA","names":["AuthInterceptor","constructor","userService","intercept","req","next","console","log","url","token","localStorage","getItem","getToken","jsonReq","clone","setHeaders","Authorization","handle","factory"],"sourceRoot":"","sources":["C:\\projects\\githubSearch\\client\\github-search\\core\\services\\auth-interceptor.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { Observable, catchError, switchMap, take, tap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { UserService } from \"./user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n\r\n    usertoken: any;\r\n    constructor(private userService: UserService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(`AddTokenInterceptor - ${req.url}`);\r\n        let token = localStorage.getItem(\"access_token\") || this.userService.getToken();\r\n            let jsonReq: HttpRequest<any> = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n        return next.handle(jsonReq);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}