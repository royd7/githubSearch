{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const isAuth = this.authService.isAuthorized();\n    if (!isAuth) {}\n    return this.authService.isAuthorized();\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n}","map":{"version":3,"mappings":";;;AAKA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAY;EAExEC,WAAW,CACTC,KAA6B,EAAEC,KAA0B;IAEzD,MAAMC,MAAM,GAAG,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;IAC9C,IAAI,CAACD,MAAM,EAAE;IAGb,OAAO,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;EACxC;EAAC;qBAZUR,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAS,SAATT,SAAS;EAAA","names":["AuthGuard","constructor","authService","router","canActivate","route","state","isAuth","isAuthorized","factory"],"sourceRoot":"","sources":["C:\\projects\\githubSearch\\client\\github-search\\src\\app\\services\\auth.guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: UserService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot,\r\n  ) {\r\n    const isAuth = this.authService.isAuthorized();\r\n    if (!isAuth) {\r\n      \r\n    }\r\n    return this.authService.isAuthorized();\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}